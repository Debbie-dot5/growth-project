import React, { useState } from 'react';

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  return (
    <>
      <nav className="flex justify-between items-center my-4 px-4">
        {/* Logo */}
        <div>
          <img src="/Logo.png" alt="Logo" />
        </div>

        {/* Desktop Menu */}
        <ul className="hidden md:flex justify-between space-x-6 font-medium items-center">
          <li>Features</li>
          <li>About Us</li>
          <li>Blog</li>
          <button className="bg-gray-100 px-4 py-2 rounded-md text-sm">Log In</button>
        </ul>

        {/* Hamburger Button */}
        <button
          className="md:hidden bg-gray-100 p-2 rounded-md"
          onClick={toggleMenu}
        >
          {isOpen ? (
            <img src="/close-icon.png" alt="Close Menu" />
          ) : (
            <img src="/hamburger-menu.png" alt="Open Menu" />
          )}
        </button>
      </nav>

      {/* Mobile Menu */}
      {isOpen && (
        <ul className="flex flex-col items-start space-y-4 bg-gray-100 p-4 font-medium md:hidden">
          <li>Features</li>
          <li>About Us</li>
          <li>Blog</li>
          <button className="bg-gray-200 px-4 py-2 rounded-md text-sm">
            Log In
          </button>
        </ul>
      )}
    </>
  );
};

export default Navbar;



 h-[452px] w-[406px]

space-x-6
grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6
w-96

grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6

space-x-6 overflow-x-scroll


import React from 'react'
import { useState } from 'react'

const Navbar = () => {
    const Navbar = () => {
        const [ isOpen, setIsOpen] = useState(false)


        const toggleMenu = () => {
            setIsOpen(!isOpen)
          }
    }

  return (

  <>
   <nav className='flex justify-between items-center my-4'>
   <div>
    <img src='/Logo.png' />
   </div>

   <ul className='flex justify-between space-x-6 font-medium items-center'>
   <li>Features</li>
   <li>About Us</li>
   <li>Blog</li>


   <button className='bg-gray-100 px-4 py-2 rounded-md text-sm' onClick={toggleMenu}>  Log In</button>

   </ul>

   <button className='bg-gray-100 py-2 px-0.5 rounded-md '>
    <img src='/hamburger-menu.png'/>
   </button>
   </nav>

   {isOpen && (
        <ul className="flex flex-col items-start space-y-4 bg-gray-100 p-4 font-medium md:hidden">
          <li>Features</li>
          <li>About Us</li>
          <li>Blog</li>
          <button className="bg-gray-200 px-4 py-2 rounded-md text-sm">
            Log In
          </button>
        </ul>
      )}
  </>
  )
}

export default Navbar





// this is the accordion

const faqs = [
  {
    question: "What is Tailwind CSS?",
    answer:
      "Tailwind CSS is a utility-first CSS framework for rapidly building custom user interfaces.",
  },
  {
    question: "How does React work?",
    answer:
      "React creates a virtual DOM. When state changes occur, React efficiently updates and re-renders components.",
  },
  {
    question: "Can I use Tailwind with React?",
    answer: "Yes, Tailwind CSS can be easily integrated with React projects.",
  },
];

const FAQ = () => {
  const [openIndex, setOpenIndex] = useState(null);

  const toggleFAQ = (index) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <div className="max-w-2xl mx-auto my-10 space-y-4">
      <h2 className="text-3xl font-bold text-center mb-6">FAQs</h2>
      {faqs.map((faq, index) => (
        <div
          key={index}
          className="border border-gray-300 rounded-lg shadow-sm">
          {/* Question */}
          <button className="w-full text-left px-4 py-3 font-medium text-gray-800 flex justify-between items-center focus:outline-none"onClick={() => toggleFAQ(index)}>
            <span>{faq.question}</span>
            <svg
              className={`w-5 h-5 transform transition-transform ${
                openIndex === index ? "rotate-180" : ""
              }`}
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor" >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M19 9l-7 7-7-7"
              />
            </svg>
          </button>

          {/* Answer */}
          {openIndex === index && (
            <div className="px-4 py-3 text-gray-700 bg-gray-50">
              {faq.answer}
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default FAQ;
